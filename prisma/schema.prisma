// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  NONE
  ACTIVE
  INACTIVE
}

enum Role {
  NONE
  SYSTEM
  ADMIN
  COLLECTOR
  DYCOLLECTOR
  SUPERITENDANT
  HEADCLERK
  MAMLATDAR
  ATP
  CITYSURVEY
  COURTCLERK
  USER
}

enum Department {
  NONE
  PDA
  EOCS
  LANDSECTION
  MAMLATDAR
  COLLECTOR
  DYCOLLECTOR
}

enum QueryType {
  NONE
  INTRA
  INTER
  PUBLIC
}

enum QueryStatus {
  NONE
  SENT
  RECEIVED
  REPLIED
  RESOLVED
}

enum FormType {
  NONE
  SALE
  GIFT
  PARTITION
  MORTGAGE
  NA
  SUBDIVISON
  AMALGAMATION
  LEASE
  COURT
  RTI
  GRANTGOVTLAND
  ACQUISITION
}

enum Agree {
  NONE
  YES
  NO
}

enum TypeOfNA {
  NONE
  RESIDENTIAL
  COMMERCIAL
  INDUSTRIAL
  RESIDENTIALCUMCOMMERCIAL
}

enum queryStatus {
  NONE
  SUBMIT
  INPROCESS
  QUERYRAISED
  APPROVED
  REJECTED
  PAYMENTPENDING
  CERTIFICATEGRANT
  COMPLETED
}

enum ScSt {
  NONE
  GENERAL
  ST
  SC
  OTHER
}

enum PaymentType {
  NONE
  CASH
  CHEQUE
  NETBANKING
  CCDC
  UPI
}

enum PaymentStatus {
  NONE
  PENDING
  PAID
}

model user {
  id              Int              @id @default(autoincrement())
  name            String?
  email           String?
  password        String
  contact         String?
  pic_url         String?
  department      Department       @default(NONE)
  role            Role             @default(NONE)
  otp             String?
  address         String?
  user_uid        String?
  status          Status           @default(NONE)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  deletedAt       DateTime?
  to_user         query[]          @relation("touser")
  from_user       query[]          @relation("fromuser")
  common          common[]
  rti_form        rti_form[]
  sale_form       sale_form[]
  gift_form       gift_form[]
  partition_form  partition_form[]
  na_form         na_form[]
  sd_form         sd_form[]
  userpayment     payment[]        @relation("user")
  deptuserpayment payment[]        @relation("deptuser")
}

model village {
  id             Int              @id @default(autoincrement())
  name           String
  sale_form      sale_form[]
  gift_form      gift_form[]
  partition_form partition_form[]
  na_form        na_form[]
  sd_form        sd_form[]
  survey         survey[]
}

model survey {
  id           Int       @id @default(autoincrement())
  village      village   @relation(fields: [villageId], references: [id])
  villageId    Int
  survey_no    String
  sub_division String?
  owner_name   String
  area         String
  zone         String?
  status       Status    @default(NONE)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
}

model query {
  id           Int         @id @default(autoincrement())
  stage        FormType    @default(NONE)
  form_id      Int
  form_status  Int
  to_user      user        @relation("touser", fields: [to_user_id], references: [id])
  to_user_id   Int
  from_user    user        @relation("fromuser", fields: [from_user_id], references: [id])
  from_user_id Int
  query_type   QueryType   @default(NONE)
  doc_url      String?
  remark       String
  query_status QueryStatus @default(NONE)
  status       Status      @default(NONE)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  deletedAt    DateTime?
}

model common {
  id            Int         @id @default(autoincrement())
  form_type     FormType    @default(NONE)
  form_id       Int
  user          user        @relation(fields: [user_id], references: [id])
  user_id       Int
  auth_user_id  String?
  focal_user_id String?
  intra_user_id String?
  inter_user_id String?
  village       String?
  name          String
  number        String
  form_status   Int?
  query_status  queryStatus @default(NONE)
  status        Status      @default(NONE)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  deletedAt     DateTime?
}

model rti_form {
  id                  Int       @id @default(autoincrement())
  user                user      @relation(fields: [userId], references: [id])
  userId              Int
  user_uid            String?
  name                String?
  address             String?
  mobile              String?
  email               String?
  subject_info        String?
  from_date           DateTime?
  to_date             DateTime?
  description         String?
  information         String?
  proverty_line_url   String?
  iagree              Agree     @default(NONE)
  remarks             String?
  signature_url       String?
  attachments         Json?
  rejection_reason    String?
  certificate_id      String?
  certificate_date    DateTime?
  certificate_url     String?
  comments_dept       String?
  condition_to_follow String?
  status              Status    @default(NONE)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  deletedAt           DateTime?
}

model na_form {
  id                  Int       @id @default(autoincrement())
  user                user      @relation(fields: [userId], references: [id])
  userId              Int
  user_uid            String?
  name                String?
  address             String?
  mobile              String?
  email               String?
  scst                ScSt      @default(NONE)
  occupation          String?
  govt_employee       String?
  village             village?  @relation(fields: [village_id], references: [id])
  village_id          Int?
  survey_no           String?
  sub_division        String?
  land_use            String?
  land_situate        String?
  electric            String?
  road_access         String?
  road_adjoin         String?
  na_reason           String?
  addition_land       String?
  past_appln_reject   String?
  agri_evidence_url   String?
  govt_evidence_url   String?
  land_purpose        TypeOfNA  @default(NONE)
  land_site_plan_url  String?
  nakel_url_1_14      String?
  nakel_rr_14         String?
  iagree              Agree     @default(NONE)
  remarks             String?
  signature_url       String?
  rejection_reason    String?
  certificate_id      String?
  certificate_date    DateTime?
  certificate_url     String?
  comments_dept       String?
  condition_to_follow String?
  status              Status    @default(NONE)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  deletedAt           DateTime?
}

model gift_form {
  id                  Int       @id @default(autoincrement())
  user                user      @relation(fields: [userId], references: [id])
  userId              Int
  user_uid            String?
  name                String?
  address             String?
  mobile              String?
  email               String?
  occupation          String?
  scst                ScSt      @default(NONE)
  govt_employee       String?
  village             village?  @relation(fields: [village_id], references: [id])
  village_id          Int?
  survey_no           String?
  sub_division        String?
  land_use            String?
  land_situate        String?
  electric            String?
  road_access         String?
  land_acq            String?
  gift_reason         String?
  addition_land       String?
  name_donee          String?
  address_donee       String?
  agri_evidence_url   String?
  govt_evidence_url   String?
  past_appln_reject   String?
  land_site_plan_url  String?
  nakel_url_1_14      String?
  iagree              Agree     @default(NONE)
  remarks             String?
  signature_url       String?
  rejection_reason    String?
  certificate_id      String?
  certificate_date    DateTime?
  certificate_url     String?
  comments_dept       String?
  condition_to_follow String?
  status              Status    @default(NONE)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  deletedAt           DateTime?
}

model sale_form {
  id                  Int       @id @default(autoincrement())
  user                user      @relation(fields: [userId], references: [id])
  userId              Int
  user_uid            String?
  name                String?
  address             String?
  mobile              String?
  email               String?
  occupation          String?
  scst                ScSt      @default(NONE)
  govt_employee       String?
  village             village?  @relation(fields: [village_id], references: [id])
  village_id          Int?
  survey_no           String?
  sub_division        String?
  land_use            String?
  land_situate        String?
  electric            String?
  road_access         String?
  land_acq            String?
  sale_reason         String?
  addition_land       String?
  name_purchaser      String?
  address_purchaser   String?
  agri_evidence_url   String?
  govt_evidence_url   String?
  past_appln_reject   String?
  land_site_plan_url  String?
  nakel_url_1_14      String?
  iagree              Agree     @default(NONE)
  remarks             String?
  signature_url       String?
  rejection_reason    String?
  certificate_id      String?
  certificate_date    DateTime?
  certificate_url     String?
  comments_dept       String?
  condition_to_follow String?
  status              Status    @default(NONE)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  deletedAt           DateTime?
}

model partition_form {
  id                      Int       @id @default(autoincrement())
  user                    user      @relation(fields: [userId], references: [id])
  userId                  Int
  user_uid                String?
  name                    String?
  address                 String?
  mobile                  String?
  email                   String?
  village                 village?  @relation(fields: [village_id], references: [id])
  village_id              Int?
  survey_no               String?
  sub_division            String?
  prev_application_date   DateTime?
  prev_application_number String?
  information_needed      String?
  iagree                  Agree     @default(NONE)
  remarks                 String?
  aadhar_url              String?
  signature_url           String?
  attachments             Json?
  rejection_reason        String?
  certificate_id          String?
  certificate_date        DateTime?
  certificate_url         String?
  comments_dept           String?
  condition_to_follow     String?
  status                  Status    @default(NONE)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  deletedAt               DateTime?
}

model sd_form {
  id                      Int       @id @default(autoincrement())
  user                    user      @relation(fields: [userId], references: [id])
  userId                  Int
  user_uid                String?
  name                    String?
  address                 String?
  mobile                  String?
  email                   String?
  village                 village?  @relation(fields: [village_id], references: [id])
  village_id              Int?
  survey_no               String?
  sub_division            String?
  prev_application_date   DateTime?
  prev_application_number String?
  information_needed      String?
  iagree                  Agree     @default(NONE)
  remarks                 String?
  aadhar_url              String?
  signature_url           String?
  attachments             Json?
  rejection_reason        String?
  certificate_id          String?
  certificate_date        DateTime?
  certificate_url         String?
  comments_dept           String?
  condition_to_follow     String?
  status                  Status    @default(NONE)
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  deletedAt               DateTime?
}

model dealing_hand {
  id          Int       @id @default(autoincrement())
  file_type   FormType  @default(NONE)
  collector   Boolean   @default(false)
  dycollector Boolean   @default(false)
  suptd       Boolean   @default(false)
  headclerk   Boolean   @default(false)
  mamlatdar   Boolean   @default(false)
  eocs        Boolean   @default(false)
  dept1       Boolean   @default(false)
  dept2       Boolean   @default(false)
  dept3       Boolean   @default(false)
  dept4       Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model payment {
  id            Int           @id @default(autoincrement())
  form_type     FormType      @default(NONE)
  form_id       Int
  deptuser      user          @relation("deptuser", fields: [deptuser_id], references: [id])
  deptuser_id   Int
  user          user          @relation("user", fields: [user_id], references: [id])
  user_id       Int
  type1         Int?
  amount1       Int?
  type2         Int?
  amount2       Int?
  type3         Int?
  amount3       Int?
  daycount      Int?
  paymentamout  Int?
  reference     String?
  paymentType   PaymentType   @default(NONE)
  paymentstatus PaymentStatus @default(NONE)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?
}
